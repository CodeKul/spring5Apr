1. @Configuration
	- indicates that this class is a configuration class
	- a class marked with this annotation is a source of the bean definitions

2. @ComponentScan
	- scan the packages configured with it for the @Configuration class
3. @Component
	 - declare a bean is to mark with @Component
	 - creates a class into Spring bean at auto-scan
4. @Bean
	- method level annotation
	- creates a bean
	- bean producer
	- managed by spring context
5. @Autowired
	- used for automatic dependency injection
	- internally uses setters or constructor injection
6. @RestController
7. @GetMapping
8. @SpringBootApplication
	- combined @Configuration,@ComponentScan & @EnableAutoConfiguration

9. @EnableAutoConfiguration
10. @Service

10.     @GetMapping
11. @PostMapping
12. @PutMapping
13. @DeleteMapping

//JPA
14. @Entity - the class is a persistent Java class
15. @Table - the table that maps this entity
16. @Id - primary key
17. @GeneratedValue -  define generation strategy for the given primary
18. @Column - define column in db that maps annotated field
19. @Service

